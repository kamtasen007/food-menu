[{"C:\\Users\\kamta\\Desktop\\my-food\\src\\index.js":"1","C:\\Users\\kamta\\Desktop\\my-food\\src\\App.js":"2","C:\\Users\\kamta\\Desktop\\my-food\\src\\components\\data.js":"3","C:\\Users\\kamta\\Desktop\\my-food\\src\\components\\Cart.js":"4","C:\\Users\\kamta\\Desktop\\my-food\\src\\components\\Login.js":"5","C:\\Users\\kamta\\Desktop\\my-food\\src\\components\\Home.js":"6","C:\\Users\\kamta\\Desktop\\my-food\\src\\components\\SignUp.js":"7","C:\\Users\\kamta\\Desktop\\my-food\\src\\components\\Menu.js":"8","C:\\Users\\kamta\\Desktop\\my-food\\src\\components\\Validation.js":"9","C:\\Users\\kamta\\Desktop\\my-food\\src\\components\\Itemcard.js":"10","C:\\Users\\kamta\\Desktop\\my-food\\src\\components\\Navbar.js":"11","C:\\Users\\kamta\\Desktop\\my-food\\src\\components\\Checkout.js":"12"},{"size":257,"mtime":1676002344895,"results":"13","hashOfConfig":"14"},{"size":1069,"mtime":1676331807982,"results":"15","hashOfConfig":"14"},{"size":458,"mtime":1676359573679,"results":"16","hashOfConfig":"14"},{"size":2435,"mtime":1676365156490,"results":"17","hashOfConfig":"14"},{"size":1632,"mtime":1676357295602,"results":"18","hashOfConfig":"14"},{"size":767,"mtime":1676359392374,"results":"19","hashOfConfig":"14"},{"size":2034,"mtime":1676357301550,"results":"20","hashOfConfig":"14"},{"size":680,"mtime":1676365160556,"results":"21","hashOfConfig":"14"},{"size":476,"mtime":1676357303588,"results":"22","hashOfConfig":"14"},{"size":997,"mtime":1676365158589,"results":"23","hashOfConfig":"14"},{"size":738,"mtime":1676357299600,"results":"24","hashOfConfig":"14"},{"size":483,"mtime":1676357288030,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"kfnsya",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"C:\\Users\\kamta\\Desktop\\my-food\\src\\index.js",[],[],[],"C:\\Users\\kamta\\Desktop\\my-food\\src\\App.js",[],[],"C:\\Users\\kamta\\Desktop\\my-food\\src\\components\\data.js",[],[],"C:\\Users\\kamta\\Desktop\\my-food\\src\\components\\Cart.js",["65"],[],"import React from 'react'\r\nimport { useCart } from 'react-use-cart'\r\n\r\nconst Cart = () => {\r\n    const { isEmpty, items,cartTotal, updateItemQuantity} = useCart();\r\n\r\n    if (isEmpty) return <h1 className='text-center'>Your cart is Empty</h1>\r\n\r\n    return (\r\n\r\n        <section className='py-6 container'>\r\n\r\n            <div className='row justify-content-center'>\r\n                <div className='col-12'>\r\n\r\n                    <table className='table table-light table-hover m-0'>\r\n                    <p>Order Summary</p>\r\n                        <tbody>\r\n                            {items.map((item, index) => {\r\n                                return (\r\n                                    \r\n                                    <tr style={{ alignItems: \"center\" }} key={index}>\r\n   \r\n                                        <td>{item.name}</td>\r\n\r\n                                        <td> {item.quantity}</td>\r\n                                        <td>\r\n                                            <button style={{ backgroundColor: \" #d20884\", width: \"80px\", color: \"white\", backgroundColor: \" rgb(65, 95, 183)\" }} className='btn btn-info ms-2' onClick={() => updateItemQuantity(item.id, item.quantity + 1)}><b>+</b></button>\r\n                                            <button style={{ backgroundColor: \" #d20884\", width: \"80px\", color: \"white\" }} className='btn btn-info ms-2' onClick={() => updateItemQuantity(item.id, item.quantity - 1)}><b>-</b></button>\r\n                                            \r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n\r\n                            })}\r\n\r\n                        </tbody>\r\n                        <div className='col-auto ms-auto'>\r\n                            <p style={{ position: \"absolute\", right: \"79%\" }}>Total Price (INR) : {cartTotal}</p>\r\n                        </div>\r\n                    </table>\r\n\r\n                </div>\r\n                <div className='col-auto ms-auto'>\r\n                    <button style={{ backgroundColor: \" rgb(65, 95, 183)\", color: \"white\", margin: \"45px\", width: \"168px\", height: \"44px\" }}>Save and Checkout</button>\r\n                    <button style={{ border: \"none\", height: \"37px\", width: \"69px\", color: \"rgb(65, 95, 183)\" }}>cancle</button>\r\n                </div>\r\n\r\n            </div>\r\n        </section>\r\n    )\r\n\r\n}\r\n\r\nexport default Cart\r\n","C:\\Users\\kamta\\Desktop\\my-food\\src\\components\\Login.js",[],[],"C:\\Users\\kamta\\Desktop\\my-food\\src\\components\\Home.js",[],[],"C:\\Users\\kamta\\Desktop\\my-food\\src\\components\\SignUp.js",[],[],"C:\\Users\\kamta\\Desktop\\my-food\\src\\components\\Menu.js",[],[],"C:\\Users\\kamta\\Desktop\\my-food\\src\\components\\Validation.js",[],[],"C:\\Users\\kamta\\Desktop\\my-food\\src\\components\\Itemcard.js",["66","67"],[],"import React from 'react'\r\n\r\nimport { useCart } from 'react-use-cart'\r\n\r\nconst Itemcard = (props) => {\r\n  \r\n  const { addItem,removeItem,item} = useCart();\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n\r\n    <div className='col-11 col-md-6 col-lg-3 mx-0 mb-4'>\r\n\r\n      <div className=\"card p-0 overflow-hidden h-100 shadow\">\r\n\r\n        <div className=\"card-body \">\r\n\r\n          <img src={props.img} className=\"card-img-top img-fluid\" alt=\"image\" />\r\n          <h5 className=\"card-title\">{props.name}</h5>\r\n          <h5 className=\"card-text\"> {props.price}</h5>\r\n\r\n          <button className='btn ' style={{ backgroundColor: \"rgb(65, 95, 183)\", width: \"59px\", color: \"white\" }} onClick={() => { addItem(props.item) }}><b>+</b></button>\r\n          <button className=\"btn\" style={{ width: \"59px\", color: \"#0000002b\", backgroundColor: \"#e1d7c4e0\", marginLeft: \"20px\" }} onClick={() => { removeItem(props.id) }}><b>-</b></button>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Itemcard\r\n","C:\\Users\\kamta\\Desktop\\my-food\\src\\components\\Navbar.js",[],[],"C:\\Users\\kamta\\Desktop\\my-food\\src\\components\\Checkout.js",[],[],{"ruleId":"68","severity":1,"message":"69","line":28,"column":122,"nodeType":"70","messageId":"71","endLine":28,"endColumn":137},{"ruleId":"72","severity":1,"message":"73","line":7,"column":30,"nodeType":"74","messageId":"75","endLine":7,"endColumn":34},{"ruleId":"76","severity":1,"message":"77","line":21,"column":11,"nodeType":"78","endLine":21,"endColumn":81},"no-dupe-keys","Duplicate key 'backgroundColor'.","ObjectExpression","unexpected","no-unused-vars","'item' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]